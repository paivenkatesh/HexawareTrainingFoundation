----------------------SQL Coding Challenge---------------------------

----------CREATING DATABASE AND TABLES-----------------------

create database crimemanagement;

show databases;
+-----------------------+
| Database              |
+-----------------------+
| carconnectcasestudy   |
| crimemanagement       |
| information_schema    |
| mysql                 |
| performance_schema    |
| sys                   |
| test                  |
| ticket_booking_system |
| ticketbookingsystem   |
+-----------------------+


use crimemanagement;




CREATE TABLE Crime (
    CrimeID INT PRIMARY KEY,
    IncidentType VARCHAR(255),
    IncidentDate DATE,
    Location VARCHAR(255),
    Description TEXT,
    Status VARCHAR(20)
);



CREATE TABLE Victim (
    VictimID INT PRIMARY KEY,
    CrimeID INT,
    Name VARCHAR(255),
    ContactInfo VARCHAR(255),
    Injuries VARCHAR(255),
    FOREIGN KEY (CrimeID) REFERENCES Crime(CrimeID)
);



CREATE TABLE Suspect (
    SuspectID INT PRIMARY KEY,
    Crime_ID INT,
    Name VARCHAR(255),
    Description TEXT,
    CriminalHistory TEXT,
    FOREIGN KEY (Crime_ID) REFERENCES Crime(CrimeID)
);


show tables;
+---------------------------+
| Tables_in_crimemanagement |
+---------------------------+
| crime                     |
| suspect                   |
| victim                    |
+---------------------------+
3 rows in set (0.09 sec)


INSERT INTO Crime (CrimeID, IncidentType, IncidentDate, Location, Description, Status)
VALUES
    (1, 'Robbery', '2023-09-15', '123 Main St, Cityville', 'Armed robbery at a convenience store', 'Open'),
    (2, 'Homicide', '2023-09-20', '456 Elm St, Townsville', 'Investigation into a murder case', 'Under Investigation'),
    (3, 'Theft', '2023-09-10', '789 Oak St, Villagetown', 'Shoplifting incident at a mall', 'Closed');

 select * from crime;
+---------+--------------+--------------+-------------------------+--------------------------------------+--------+
| CrimeID | IncidentType | IncidentDate | Location                | Description                          | Status |
+---------+--------------+--------------+-------------------------+--------------------------------------+--------+
|       1 | Robbery      | 2023-09-15   | 123 Main St,Cityville   | Armed robbery at a convenience store | Open   |
|       2 | Homicide     | 2023-09-20   | 456 Elm St, Townsville  | Investigation into a murder case     | Under  |
|       3 | Theft        | 2023-09-10   | 789 Oak St, Villagetown | Shoplifting incident at a mall       | Closed |
+---------+--------------+--------------+-------------------------+--------------------------------------+--------+
3 rows in set (0.00 sec)



INSERT INTO Victim (VictimID, CrimeID, Name, ContactInfo, Injuries)
VALUES
    (1, 1, 'John Doe', 'johndoe@example.com', 'Minor injuries'),
    (2, 2, 'Jane Smith', 'janesmith@example.com', 'Deceased'),
    (3, 3, 'Alice Johnson', 'alicejohnson@example.com', 'None');

select * from victim;
+----------+---------+---------------+--------------------------+----------------+------+
| VictimID | CrimeID | Name          | ContactInfo              | Injuries       | age  |
+----------+---------+---------------+--------------------------+----------------+------+
|        1 |       1 | John Doe      | johndoe@example.com      | Minor injuries |   30 |
|        2 |       2 | Jane Smith    | janesmith@example.com    | Deceased       |   28 |
|        3 |       3 | Alice Johnson | alicejohnson@example.com | None           |   22 |
+----------+---------+---------------+--------------------------+----------------+------+
3 rows in set (0.00 sec)



INSERT INTO Suspect (SuspectID, CrimeID, Name, Description, CriminalHistory)
VALUES
    (1, 1, 'Robber 1', 'Armed and masked robber', 'Previous robbery convictions'),
    (2, 2, 'Unknown', 'Investigation ongoing', NULL),
    (3, 3, 'Suspect 1', 'Shoplifting suspect', 'Prior shoplifting arrests');


select * from Suspect;
+-----------+----------+-----------+-------------------------+------------------------------+------+
| SuspectID | Crime_ID | Name      | Description             | CriminalHistory              | Age  |
+-----------+----------+-----------+-------------------------+------------------------------+------+
|         1 |        1 | Robber 1  | Armed and masked Robber | Previous robbery convictions |   35 |
|         2 |        2 | Unknown   | Investigation ongoing   | NULL                         |   40 |
|         3 |        3 | Suspect 1 | Shoplifting suspect     | Prior shoplifting arrests    |   27 |
+-----------+----------+-----------+-------------------------+------------------------------+------+
3 rows in set (0.00 sec)


--ADDING AGE COLUMN--

ALTER TABLE Victim
ADD Age INT;


ALTER TABLE Suspect
ADD Age INT;

ADDINGG VALUES TO AGE COLUMN

UPDATE Victim
SET Age = CASE VictimID
    WHEN 1 THEN 30  
    WHEN 2 THEN 28  
    WHEN 3 THEN 22  
END;

UPDATE Suspect
SET Age = CASE SuspectID
    WHEN 1 THEN 35  
    WHEN 2 THEN 40  
    WHEN 3 THEN 27  
END;




----------------------------------Questions & Answer Queries-------------------------------------



1. select * from crime
    -> where status = 'open';



2. select count(*) AS total_incidents
    -> from crime;
+-----------------+
| total_incidents |
+-----------------+
|               3 |
+-----------------+
1 row in set (0.00 sec)



3. select DISTINCT IncidentType from crime;



4. select * from crime
    -> where IncidentDate BETWEEN '2023-09-01' AND '2023-09-10';
+---------+--------------+--------------+-------------------------+--------------------------------+--------+
| CrimeID | IncidentType | IncidentDate | Location                | Description                    | Status |
+---------+--------------+--------------+-------------------------+--------------------------------+--------+
|       3 | Theft        | 2023-09-10   | 789 Oak St, Villagetown | Shoplifting incident at a mall | Closed |
+---------+--------------+--------------+-------------------------+--------------------------------+--------+
1 row in set (0.00 sec)



5. SELECT v.Name AS PersonName, v.Age, 'Victim' AS Role
FROM Victim v
UNION ALL
SELECT s.Name AS PersonName, s.Age, 'Suspect' AS Role
FROM Suspect s
ORDER BY Age DESC;  


6. SELECT AVG(Age) AS AverageAge
FROM (SELECT Age FROM Victim
UNION ALL
SELECT Age FROM Suspect) AS AllPersons;


7. SELECT IncidentType, COUNT(*) AS IncidentCount
    -> FROM Crime
    -> WHERE Status = 'Open'
    -> GROUP BY IncidentType;

8.  select Name, ContactInfo from victim
    -> where Name LIKE '%Doe%';



9.  select Name, 'Victim' AS Role, c.Status
    -> from victim v
    -> JOIN crime c ON v.crimeID = c.crimeID
    -> where c.status IN ('Open','Closed')
    -> UNION ALL
    -> select Name, 'Suspect' AS Role, c.Status
    -> from suspect s
    -> JOIN crime c ON s.Crime_ID = c.CrimeID
    -> Where c.status IN ('Open','Closed');

10. SELECT DISTINCT c.IncidentType
    -> FROM Crime c
    -> LEFT JOIN Victim v ON c.CrimeID = v.CrimeID
    -> LEFT JOIN Suspect s ON c.CrimeID = s.Crime_ID
    -> WHERE v.Age IN (30, 35) OR s.Age IN (30, 35);

11. SELECT v.Name AS PersonName, 'Victim' AS Role, c.IncidentType
    -> FROM Victim v
    -> JOIN Crime c ON v.CrimeID = c.CrimeID
    -> WHERE c.IncidentType = 'Robbery'
    -> UNION ALL
    -> SELECT s.Name AS PersonName, 'Suspect' AS Role, c.IncidentType
    -> FROM Suspect s
    -> JOIN Crime c ON s.Crime_ID = c.CrimeID
    -> WHERE c.IncidentType = 'Robbery';

12. select IncidentType, count(*) AS OpenCaseCount
    -> from crime
    -> where status = 'Open'
    -> Group By IncidentType
    -> Having count(*) > 1;

13. SELECT DISTINCT c.*
    -> FROM Crime c
    -> JOIN Suspect s ON c.CrimeID = s.Crime_ID
    -> WHERE s.Name IN (
    ->     SELECT v.Name
    ->     FROM Victim v
    ->     WHERE v.CrimeID <> c.CrimeID
    -> );

14.  SELECT
    ->     c.CrimeID,
    ->     c.IncidentType,
    ->     c.IncidentDate,
    ->     c.Location,
    ->     c.Description AS IncidentDescription,
    ->     c.Status,
    ->     v.Name AS VictimName,
    ->     v.ContactInfo AS VictimContactInfo,
    ->     v.Injuries AS VictimInjuries,
    ->     s.Name AS SuspectName,
    ->     s.Description AS SuspectDescription,
    ->     s.CriminalHistory AS SuspectCriminalHistory
    -> FROM Crime c
    -> LEFT JOIN Victim v ON c.CrimeID = v.CrimeID
    -> LEFT JOIN Suspect s ON c.CrimeID = s.Crime_ID;


15.  SELECT DISTINCT c.*
    -> FROM Crime c
    -> JOIN Victim v ON c.CrimeID = v.CrimeID
    -> JOIN Suspect s ON c.CrimeID = s.Crime_ID
    -> WHERE s.Age > v.Age;

16. SELECT
    -> s.SuspectID,
    -> s.Name AS SuspectName,
    -> COUNT(DISTINCT s.Crime_ID) AS IncidentCount
    -> FROM Suspect s
    -> GROUP BY s.SuspectID, s.Name
    -> HAVING COUNT(DISTINCT s.Crime_ID) > 1;

17. 
mysql> SELECT c.*
    -> FROM Crime c
    -> LEFT JOIN Suspect s ON c.CrimeID = s.Crime_ID
    -> WHERE s.SuspectID IS NULL;

18. SELECT c.CrimeID
    -> FROM Crime c
    -> WHERE c.IncidentType IN ('Homicide', 'Robbery')
    -> GROUP BY c.CrimeID
    -> HAVING SUM(CASE WHEN c.IncidentType = 'Homicide' THEN 1 ELSE 0 END) > 0
    ->    AND SUM(CASE WHEN c.IncidentType = 'Robbery' THEN 1 ELSE 0 END) = COUNT(*)
    -> ;

19. 


20. 
mysql> SELECT DISTINCT
    ->s.SuspectID,
    -> s.Name AS SuspectName
    -> FROM Suspect s
    -> JOIN Crime c ON s.Crime_ID = c.CrimeID
    -> WHERE c.IncidentType IN ('Robbery', 'Assault');
+-----------+-------------+
| SuspectID | SuspectName |
+-----------+-------------+
|         1 | Robber 1    |
+-----------+-------------+

